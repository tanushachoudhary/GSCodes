const problems = [
    {
      problemID: 1,
      problemTitle: "Two Sum",
      problemDescription: "Find two numbers in an array that add up to a target sum.",
      problemDifficulty: "Easy",
      problemCreatedBy: "Admin",
      problemTags: ["Array", "Hash Table", "Two Pointers"],
    },
    {
      problemID: 2,
      problemTitle: "Reverse Linked List",
      problemDescription: "Reverse a singly linked list.",
      problemDifficulty: "Medium",
      problemCreatedBy: "Admin",
      problemTags: ["Linked List", "Recursion"],
    },
    {
      problemID: 3,
      problemTitle: "Longest Substring Without Repeating Characters",
      problemDescription: "Determine the length of the longest substring without repeating characters.",
      problemDifficulty: "Hard",
      problemCreatedBy: "Admin",
      problemTags: ["String", "Sliding Window"],
    },
    {
      problemID: 4,
      problemTitle: "N Queen",
      problemDescription: "Solve the N-Queens problem using backtracking.",
      problemDifficulty: "Hard",
      problemCreatedBy: "Admin",
      problemTags: ["Backtracking"],
    },
    {
      problemID: 5,
      problemTitle: "Rat in a Maze",
      problemDescription: "Find a path for the rat to reach the destination in a maze.",
      problemDifficulty: "Medium",
      problemCreatedBy: "Admin",
      problemTags: ["Backtracking", "Matrix"],
    },
    {
      problemID: 6,
      problemTitle: "Merge 2 BSTs",
      problemDescription: "Merge two binary search trees into one balanced BST.",
      problemDifficulty: "Easy",
      problemCreatedBy: "Admin",
      problemTags: ["Binary Search Tree", "Divide and Conquer"],
    },
    {
      problemID: 7,
      problemTitle: "K Most Frequent Elements",
      problemDescription: "Find the K most frequent elements in an array.",
      problemDifficulty: "Medium",
      problemCreatedBy: "Admin",
      problemTags: ["Heap", "Hash Table", "Sorting"],
    },
    {
      problemID: 8,
      problemTitle: "Valid Parenthesis Checker",
      problemDescription: "Check if the given string of parentheses is balanced.",
      problemDifficulty: "Easy",
      problemCreatedBy: "Admin",
      problemTags: ["Stack", "String"],
    },
    {
      problemID: 9,
      problemTitle: "Maximum Path Sum",
      problemDescription: "Find the maximum path sum in a binary tree.",
      problemDifficulty: "Hard",
      problemCreatedBy: "Admin",
      problemTags: ["Tree", "Dynamic Programming"],
    },
    {
      problemID: 10,
      problemTitle: "Frog Jump",
      problemDescription: "Determine if the frog can cross the river by jumping on stones.",
      problemDifficulty: "Medium",
      problemCreatedBy: "Admin",
      problemTags: ["Dynamic Programming", "Greedy"],
    },
  ];
  
  export default problems;
  